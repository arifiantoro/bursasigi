{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["globalThis","ck","geolocation","require","NewComponent","image","this","props","width","src","latitude","longitude","React","Component","App","state","clicked","handleTakePhoto","bind","a","moment","setState","setTimeout","handleClick","dataUri","getCurrentPosition","err","position","coords","data","axios","post","location","origin","then","res","console","log","swal","title","text","icon","dangerMode","type","window","catch","className","onTakePhoto","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAAe,I,mGCWXA,EAAa,CACfC,GAAI,MAKFC,EAAcC,EAAQ,KAEpBC,E,kDAEJ,aAAc,wC,0CAId,WACUJ,EAAWK,MAEnB,OADAL,EAAWC,GAAK,KAEd,+CAASK,KAAKC,OAAd,aACE,mCACE,qBAAKC,MAAO,IAAKC,IAAKT,EAAWK,QACjC,gCACE,+CACA,4BAAIL,EAAWU,WACf,4BAAIV,EAAWW,yB,GAhBAC,IAAMC,WAmHlBC,E,kDA1Fb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXC,SAAU,GAEZ,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBALZ,E,+CAQb,SAAYC,GACU,MAAjBnB,EAAWC,IACZD,EAAWoB,OAASD,EACpBb,KAAKe,SAAS,CACZL,SAAS,KAGXM,WACE,WACIhB,KAAKiB,eAERL,KAAKZ,MACN,O,oEAMN,WAAuBkB,GAAvB,eAAAL,EAAA,6DACMlB,EAAK,KADX,SAEmBC,EAAYuB,oBAAmB,SAAUC,EAAKC,GAC7D,GAAID,EAAK,MAAMA,EACfzB,EAAK,CACHI,MAAOmB,EACPd,SAAUiB,EAASC,OAAOlB,SAC1BC,UAAWgB,EAASC,OAAOjB,WAE7BX,EAAWU,SAAWiB,EAASC,OAAOlB,SACtCV,EAAWW,UAAYgB,EAASC,OAAOjB,UACvCX,EAAWK,MAAQmB,EACnBxB,EAAW6B,KAAOF,EAClB3B,EAAWC,GAAKA,EAChB6B,IAAMC,KAAKC,WAASC,OAAO,oBAAoB,CAC7CJ,KAAK,CACHxB,MAAOmB,EACPd,SAAUiB,EAASC,OAAOlB,SAC1BC,UAAWgB,EAASC,OAAOjB,aAG9BuB,MAAK,SAAAC,GACJC,QAAQC,IAAI,OACOC,IAAK,CACtBC,MAAO,gBACPC,KAAM,kDACNC,KAAM,UACNC,YAAY,KAGZJ,IAAK,CACDC,MAAO,OACPC,KAAM,mDACNG,KAAM,YACP,WACCC,OAAOZ,SAAWA,WAASC,OAAO,cAGvC3B,MACFuC,OAAM,SAAAnB,GACHY,IAAK,WAAY,0EAA2E,aAC9FhC,SAzCN,cA2CEA,KAAKiB,YAAYtB,GA3CnB,gD,2EA6CA,WAAS,IAAD,OAKN,OAJAC,EAAYuB,oBAAmB,SAAUC,EAAKC,GAC5C,GAAID,EAAK,MAAMA,EACfU,QAAQC,IAAIV,MAGZ,sBAAKmB,UAAU,YAAf,UACE,sBAAKA,UAAU,cAAf,UACE,yCACA,2EAED,cAAC,IAAD,CACGC,YAAgB,SAACvB,GAAc,EAAKP,gBAAgBO,MAErDlB,KAAKS,MAAMC,QAAU,cAAC,EAAD,IAAmB,Y,GAtFjCJ,IAAMC,WC/BTmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2d9324bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './bt/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport Camera from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport { geolocated } from \"react-geolocated\";\nimport axios from 'axios';\nimport { render } from '@testing-library/react';\nimport { location } from 'globalthis/implementation';\nimport swal from 'sweetalert';\n\nvar globalThis = {\n  ck: null\n}\n\nvar postLink = 'localhost';\n\nvar geolocation = require('geolocation')\n\nclass NewComponent extends React.Component {\n\n  constructor(){\n    super();\n  }\n\n  render() {\n    var c = globalThis.image;\n    globalThis.ck = null;\n    return (\n      <div {...this.props}>\n        <center>\n          <img width={200} src={globalThis.image}></img>\n          <div>\n            <p>coordinat maps</p>\n            <p>{globalThis.latitude}</p>\n            <p>{globalThis.longitude}</p>\n          </div>\n        </center>\n      </div>\n    );\n  }  \n}\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      clicked : false\n    }\n    this.handleTakePhoto = this.handleTakePhoto.bind(this);\n  }\n\n  handleClick(a) {\n    if(globalThis.ck != null){\n      globalThis.moment = a;\n      this.setState({\n        clicked: true\n      });\n    }else{\n      setTimeout(\n        function() {\n            this.handleClick();\n        }\n        .bind(this),\n        1000\n      );\n\n    }\n  }\n\n  async handleTakePhoto (dataUri) {\n    var ck = null;\n    var lock = await geolocation.getCurrentPosition(function (err, position) {\n      if (err) throw err\n      ck = {\n        image: dataUri,\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      }\n      globalThis.latitude = position.coords.latitude;\n      globalThis.longitude = position.coords.longitude;\n      globalThis.image = dataUri;\n      globalThis.data = position;\n      globalThis.ck = ck;\n      axios.post(location.origin+'/api/absensi/post',{\n        data:{\n          image: dataUri,\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        }\n      })\n      .then(res => {\n        console.log('elm');\n        const willDelete = swal({\n          title: \"Are you sure?\",\n          text: \"Are you sure that you want to delete this file?\",\n          icon: \"warning\",\n          dangerMode: true,\n        });\n        if (willDelete) {\n          swal({\n              title: \"Wow!\",\n              text: \"Absensi telah berhasil, silahkan kembali kemenu!\",\n              type: \"success\"\n          }, function() {\n              window.location = location.origin+\"/user/\";\n          });\n        }\n      }, this)\n      .catch(err => {\n          swal(\"Warning!\", \"Anda gagal absensi, pastikan anda terkoneksi insternet dan coba kembali\", \"warning\");\n      },this)\n    })\n    this.handleClick(ck);\n  }\n  render(){\n    geolocation.getCurrentPosition(function (err, position) {\n      if (err) throw err\n      console.log(position)\n    })\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Absensi</h1>\n          <p>Pastikan perangkat kamera anda tersedia</p>\n        </div>\n         <Camera\n            onTakePhoto = { (dataUri) => { this.handleTakePhoto(dataUri); } }\n          />\n          {this.state.clicked ? <NewComponent /> : null}\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}